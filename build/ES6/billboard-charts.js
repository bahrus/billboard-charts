(function(){if(customElements.get("billboard-charts"))return;const cs_src=self.billboard_charts?billboard_charts.href:document.currentScript.src;function downloadJSFilesInParallelButLoadInSequence(refs){return new Promise(resolve=>{const notLoadedYet={},nonNullRefs=refs.filter(ref=>null!==ref);nonNullRefs.forEach(ref=>{notLoadedYet[ref.src]=!0});nonNullRefs.forEach(ref=>{const script=document.createElement("script");script.src=ref.src;script.async=!1;script.onload=()=>{Object.keys(notLoadedYet).forEach(key=>{if(script.src.endsWith(key)){delete notLoadedYet[key]}});if(0===Object.keys(notLoadedYet).length){resolve()}};document.head.appendChild(script)})})}const template=document.createElement("template"),base=cs_src.split("/").slice(0,-1).join("/"),refs=[];if("object"!==typeof d3){const d3Path=self._d3?_d3.href:base+"/d3.min.js";refs.push({src:d3Path})}if("undefined"===typeof bb){const bbPath=self._bb?_bb.href:base+"/billboard.min.js";refs.push({src:bbPath})}function loadCssPaths(links,css){if(0===links.length){template.innerHTML=`
            <style>
                 :host {
                    display: block;
                }
                ${css.join("")}
            </style>
            <div id="chartTarget"></div>`;downloadJSFiles();return}const link=links.pop();fetch(link.href,{credentials:"same-origin"}).then(resp=>{resp.text().then(txt=>{css.push(txt);loadCssPaths(links,css)})})}function loadCss(){let links=[].slice.call(document.head.querySelectorAll(".billboard.css"));if(0===links.length){links=[{href:"https://naver.github.io/billboard.js/release/latest/dist/billboard.min.css"}]}loadCssPaths(links,[])}if("loading"!==document.readyState){loadCss()}else{document.addEventListener("DOMContentLoaded",()=>{loadCss()})}function downloadJSFiles(){downloadJSFilesInParallelButLoadInSequence(refs).then(()=>{initBillboardCharts()})}function initBillboardCharts(){class BillboardCharts extends HTMLElement{get publish(){return this._publish}set publish(val){if(val){this.setAttribute("publish","")}else{this.removeAttribute("publish")}}get data(){return this._data}set data(val){this._data=val;this.onPropsChange()}get newData(){return this._newData}set newData(val){this._newData=val;this.onNewData()}get staleData(){return this._staleData}set staleData(val){this._staleData=val;this.onStaleData()}set selectedElement(val){this._selectedElement=val;const newEvent=new CustomEvent("selected-element-changed",{detail:{value:val},bubbles:!0,composed:!0});this.dispatchEvent(newEvent)}get selectedElement(){return this._selectedElement}static get observedAttributes(){return["publish","data","newData","staleData"]}static get is(){return"billboard-charts"}constructor(){super();this.attachShadow({mode:"open"});this.shadowRoot.appendChild(template.content.cloneNode(!0))}_upgradeProperty(prop){if(this.hasOwnProperty(prop)){let value=this[prop];delete this[prop];this[prop]=value}}attributeChangedCallback(name,oldValue,newValue){switch(name){case"publish":this._publish=null!==newValue;this.onPropsChange();break;default:this["_"+this.snakeToCamel(name)]=newValue;}}get chart(){return this._chart}snakeToCamel(s){return s.replace(/(\-\w)/g,function(m){return m[1].toUpperCase()})}connectedCallback(){BillboardCharts.observedAttributes.forEach(attrib=>{this._upgradeProperty(this.snakeToCamel(attrib))})}onPropsChange(){if(!this.publish||!this.data||!this.data.data)return;this.data.bindto=this.shadowRoot.getElementById("chartTarget");if(!this.data.data.onclick){this.data.data.onclick=dataPoint=>{this.selectedElement=dataPoint}}if(!this._chart){this._chart=bb.generate(this.data);if(this.newData)this.onNewData()}else{this._chart=bb.generate(this.data)}}onNewData(){if(this.newData&&this._chart){this._chart.load(this.newData)}}onStaleData(){if(this.staleData&&this._chart){this._chart.unload(this.staleData)}}}customElements.define(BillboardCharts.is,BillboardCharts)}})();